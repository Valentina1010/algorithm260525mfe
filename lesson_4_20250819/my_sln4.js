// 1) 
// Выведите на экран первые 11 членов последовательности Фибоначчи.
// первый и второй члены последовательности равны единицам
// а каждый следующий — сумме двух предыдущих
// Пример последовательности Фибоначчи - это 1  1  2  3  5  8  13  21  34  55  89  144 и т.д.
// - Реализация рекурсивно
//     - * Улучшить используя алгоритм РиВ

// 1. Рекурсивная реализация(классическая)
// Рекурсивная функция для n-го числа Фибоначчи
function fib(n) {
    if (n === 1 || n === 2) {
        return 1;
    }
    return fib(n - 1) + fib(n - 2);
}

// Вывод первых 11 членов
for (let i = 1; i <= 11; i++) {
    console.log(fib(i));
}

// 2. Улучшение — алгоритм «Разделяй и властвуй»

let memo = {};

function fib(n) {
    if (n in memo) return memo[n];
    if (n === 1 || n === 2) return 1;

    memo[n] = fib(n - 1) + fib(n - 2);
    return memo[n];
}

// Вывод первых 11 членов
for (let i = 1; i <= 11; i++) {
    console.log(fib(i));
}


// 2)*
//     Имея два отсортированных массива размера m и n соответственно, вам нужно найти элемент,
//         который будет находиться на k - й позиции в конечном отсортированном массиве.
//             Массив 1 - 100 112 256 349 770
// Массив 2 - 72 86 113 119 265 445 892
// к = 7
// Вывод: 256
// Окончательный отсортированный массив -
//     72, 86, 100, 112, 113, 119, 256, 265, 349, 445, 770, 892
// 7 - й элемент этого массива равен 256.

function findKthElement(arr1, arr2, k) {
    let i = 0, j = 0, count = 0, kth;

    while (i < arr1.length && j < arr2.length) {
        if (arr1[i] < arr2[j]) {
            kth = arr1[i];
            i++;
        } else {
            kth = arr2[j];
            j++;
        }
        count++;
        if (count === k) return kth;
    }

    // Если остались элементы
    while (i < arr1.length) {
        kth = arr1[i];
        i++;
        count++;
        if (count === k) return kth;
    }

    while (j < arr2.length) {
        kth = arr2[j];
        j++;
        count++;
        if (count === k) return kth;
    }
}

let arr1 = [100, 112, 256, 349, 770];
let arr2 = [72, 86, 113, 119, 265, 445, 892];
let k = 7;

console.log(findKthElement(arr1, arr2, k)); // 256